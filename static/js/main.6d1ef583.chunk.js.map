{"version":3,"sources":["World.tsx","App.tsx","index.tsx"],"names":["ctx","mousePosition","x","y","prevPen","vx","vy","pen","window","innerWidth","innerHeight","penDown","penUpTime","lastT","time","clear","save","fillStyle","fillRect","restore","ev_mousemove","ev","offsetX","offsetY","ev_mousedown","ev_mouseup","requestAnimationFrame","tick","t","dt","springForceY","springForceX","accelerationY","accelerationX","updatePen","v","Math","sqrt","lineWidth","max","beginPath","moveTo","bezierCurveTo","stroke","random","sr","Z","arc","PI","fill","renderPen","World","canvasRef","React","useRef","useEffect","canvas","current","addEventListener","getContext","lineCap","strokeStyle","ref","width","height","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d1ef583.chunk.js","sourcesContent":["import React from 'react';\n\ntype Pen = {\n    x: number; y: number; vx: number; vy: number;\n}\n\nconst mousePosition = { x: 0, y: 0 };\nconst prevPen: Pen = { x: 0, y: 0, vx: 0, vy: 0 };\nconst pen: Pen = { x: window.innerWidth / 2, y: window.innerHeight / 2, vx: 0, vy: 0 }\nlet penDown = false;\nlet penUpTime = 0;\nlet lastT = 0;\nlet time = 0;\n\nlet ctx: CanvasRenderingContext2D;\n\nconst clear = () => {\n    if (ctx) {\n        ctx.save();\n        ctx.fillStyle = \"#333\";\n        ctx.fillRect(0, 0, window.innerWidth, window.innerHeight);\n        ctx.restore();\n    }\n};\n\nconst k = 3;\nconst damping = 8;\nconst mass = 20;\n\nconst updatePen = (dt: number) => {\n\n    var springForceY = -k * (pen.y - mousePosition.y);\n    var springForceX = -k * (pen.x - mousePosition.x);\n\n    var dampingForceY = damping * pen.vy;\n    var dampingForceX = damping * pen.vx;\n\n    var forceY = springForceY - dampingForceY;\n    var forceX = springForceX - dampingForceX;\n\n    var accelerationY = forceY / mass;\n    var accelerationX = forceX / mass;\n\n    prevPen.x = pen.x;\n    prevPen.y = pen.y;\n    prevPen.vx = pen.vx;\n    prevPen.vy = pen.vy;\n\n    pen.vy += accelerationY * dt;\n    pen.vx += accelerationX * dt;\n    pen.y += pen.vy * dt;\n    pen.x += pen.vx * dt;\n};\n\nconst renderPen = () => {\n    if (!ctx) {\n        return\n    }\n    if (penDown) {\n        const Z = 0.4;\n        const v = Math.sqrt(pen.vx * pen.vx + pen.vy * pen.vy);\n        // ctx.clearRect(100,90,300,20);\n        // ctx.fillText(`v=${v}`, 100,100);\n        ctx.lineWidth = Math.max(3, (60 - v) / 4);\n        ctx.beginPath();\n        ctx.moveTo(prevPen.x, prevPen.y);\n        ctx.bezierCurveTo(\n            prevPen.x + prevPen.vx * Z, prevPen.y + prevPen.vy * Z,\n            pen.x - pen.vx * Z, pen.y - pen.vy * Z,\n            pen.x, pen.y);\n        ctx.stroke();\n    } else {\n        const drip = Math.random() > (time - penUpTime) / 100;\n        if (drip) {\n            const sr = ctx.lineWidth*2;\n            ctx.beginPath();\n            for (let Z = 0; Z < 10; Z += 1) {\n                ctx.arc(pen.x + Math.random() * sr - sr / 2, pen.y + Math.random() * sr - sr / 2,\n                 Math.random() * ctx.lineWidth / 4, 0, 2 * Math.PI, false);\n            }\n            ctx.fill();\n        }\n    }\n};\n\nconst tick = (t: number) => {\n    time = t;\n    if (lastT > 0) {\n        const dt = t - lastT;\n        updatePen(dt / 32);\n        renderPen();\n    }\n    lastT = t;\n    requestAnimationFrame(tick);\n};\n\nconst ev_mousemove = (ev: MouseEvent) => {\n    mousePosition.x = ev.offsetX;\n    mousePosition.y = ev.offsetY;\n}\n\nconst ev_mousedown = (ev: MouseEvent) => {\n    penDown = true;\n    prevPen.x = pen.x = mousePosition.x = ev.offsetX;\n    prevPen.y = pen.y = mousePosition.y = ev.offsetY;\n    prevPen.vx = prevPen.vy = pen.vx = pen.vy = 0;\n}\n\nconst ev_mouseup = (ev: MouseEvent) => {\n    penDown = false;\n    penUpTime = time;\n}\n\nrequestAnimationFrame(tick);\n\nconst World: React.FC = () => {\n    const canvasRef = React.useRef<HTMLCanvasElement>(null);\n    React.useEffect(() => {\n        const canvas = canvasRef.current;\n        if (canvas) {\n            canvas.addEventListener('mousemove', ev_mousemove, false);\n            canvas.addEventListener('mousedown', ev_mousedown, false);\n            canvas.addEventListener('mouseup', ev_mouseup, false);\n            canvas.addEventListener('dblclick', clear, false);\n            ctx = canvas.getContext('2d')!;\n            ctx.lineCap = \"round\";\n            clear();\n\n            ctx.strokeStyle = \"#f00\";\n            ctx.lineWidth = 1;\n            ctx.fillStyle = \"#f22\";\n        }\n    }, [canvasRef])\n\n    return (\n        <canvas\n            ref={canvasRef}\n            width={window.innerWidth}\n            height={window.innerHeight}\n        />);\n}\n\nexport default World;","import React from 'react';\nimport './App.css';\nimport World from './World'\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <World />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}